{"entries":[{"timestamp":1738572128483,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// enum STATE{\n//     ready,\n//     running,\n//     finish\n// }\n// let mode: STATE = STATE.ready\n\n// if (mode === STATE.ready) {}\n"],[0,"\n"]],"start1":0,"start2":0,"length1":131,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pt-only\""],[1,",\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":286,"start2":286,"length1":11,"length2":42}]}]},{"timestamp":1738572797615,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"dy) {}\n\n"],[-1,"if"]],"start1":123,"start2":123,"length1":10,"length2":8}]}]},{"timestamp":1738572800946,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"{}\n\n"],[-1,"\nSensors.SetLightLevel()\n\n"],[1,"if"]],"start1":127,"start2":127,"length1":30,"length2":6}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-sensors\": \"github:TomasKazda/pxt-sensors#a4146d725fe882187db670cb094772d4e747a220\""],[0,"\n   "]],"start1":145,"start2":145,"length1":105,"length2":8}]}]},{"timestamp":1738573399067,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"l()\n"],[-1,"let stopTime = 0\nlet lightTreshold = 0\n\nSensors.OnLightDrop(function() {\n    \n    \n})"],[1,"\n"]],"start1":152,"start2":152,"length1":89,"length2":5}]}]},{"timestamp":1738573987268,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let stopTime = 0\n\nSensors.SetLightLevel()\n\nSensors.OnLightDrop(function() {\n    music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone)"],[1,"// enum STATE{\n//     ready,\n//     running,\n//     finish\n// }\n// let mode: STATE = STATE.ready\n\n// if (mode === STATE.ready) {}\n\n\nSensors.SetLightLevel()\nlet stopTime = 0\nlet lightTreshold = 0\n\nSensors.OnLightDrop(function() {\n    "],[0,"\n   "]],"start1":0,"start2":0,"length1":184,"length2":237}]}]},{"timestamp":1738574568728,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"()\n\n"],[-1,"radio.setGroup(92)\n\nradio.onReceivedNumber(function(receivedNumber: number) {\n    if (receivedNumber === 1) {\n        music.playTone(850, 1000)\n    }\n})\n\nSensors.OnLightDrop(function() {\n   "],[1,"Sensors.OnLightDrop(function() {\n    music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)),"],[0," music."],[-1,"playTone(300, 1000)\n\n"],[1,"PlaybackMode.UntilDone)\n    "],[0,"\n})"]],"start1":39,"start2":39,"length1":225,"length2":149}]}]},{"timestamp":1738575137978,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  }\n})\n\n"],[-1,"\n"],[0,"Sensors."]],"start1":189,"start2":189,"length1":17,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":311,"start2":311,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1738572128482,"editorVersion":"7.0.57","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-bezecke-zavody\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1738573987268,"editorVersion":"7.0.57","text":{"main.ts":"// enum STATE{\n//     ready,\n//     running,\n//     finish\n// }\n// let mode: STATE = STATE.ready\n\n// if (mode === STATE.ready) {}\n\n\nSensors.SetLightLevel()\nlet stopTime = 0\nlet lightTreshold = 0\n\nSensors.OnLightDrop(function() {\n    stopTime = \n    \n})","README.md":"","pxt.json":"{\n    \"name\": \"pxt-bezecke-zavody\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-sensors\": \"github:TomasKazda/pxt-sensors#a4146d725fe882187db670cb094772d4e747a220\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1738575278227}